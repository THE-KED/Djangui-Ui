{"ast":null,"code":"import { DestroyRef, inject } from '@angular/core';\nimport { HttpParams } from \"@angular/common/http\";\nimport { COTISATION_URL, MEMBER_URL, PARTICIPATION_URL, TONTINE_URL } from \"../../Conf/Http\";\nimport { Cotisation } from \"../../Models/Entitys/Cotisation\";\nimport { takeUntilDestroyed } from \"@angular/core/rxjs-interop\";\nimport { tap } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./auth.service\";\nclass TontineServiceService {\n  constructor(http, authService) {\n    this.http = http;\n    this.authService = authService;\n    this.destroyRef = inject(DestroyRef);\n    this.participentHasben = false;\n  }\n  LoadTontine() {\n    return this.http.get(TONTINE_URL + \"/\");\n  }\n  LoadMyTontine() {\n    let id = -1;\n    if (this.authService.appUser) id = this.authService.appUser.membre.id;\n    let params = new HttpParams().set(\"id\", id);\n    return this.http.post(TONTINE_URL + \"/my\", params);\n  }\n  MyTontine(id) {\n    let params = new HttpParams().set(\"id\", id);\n    return this.http.post(TONTINE_URL + \"/my\", params);\n  }\n  getMyEchecs(id) {\n    return this.http.get(PARTICIPATION_URL + \"/myEchecs/\" + id);\n  }\n  getMyRetards(id) {\n    return this.http.get(PARTICIPATION_URL + \"/myRetards/\" + id);\n  }\n  getTypes() {\n    return this.http.get(TONTINE_URL + \"/types\");\n  }\n  getCotisation(idTontine) {\n    return this.http.get(COTISATION_URL + \"/tontine/\" + idTontine);\n  }\n  getParticipation(idCot) {\n    return this.http.get(PARTICIPATION_URL + \"/\" + idCot);\n  }\n  getActualParticipation(idCot, cot) {\n    return this.http.post(PARTICIPATION_URL + \"/actual/participation/\" + idCot, cot);\n  }\n  getAllLastbenef(idCot) {\n    console.log(\"idCot\", idCot);\n    return this.http.get(COTISATION_URL + \"/beneficiaire/\" + idCot);\n  }\n  AllLastbenef(idTon) {\n    console.log(\"idTon\", idTon);\n    return this.http.get(COTISATION_URL + \"/tontine/beneficiaire/\" + idTon);\n  }\n  getLastCot(idTon) {\n    return this.http.get(COTISATION_URL + \"/last/\" + idTon);\n  }\n  getLastNormalCot(idTon) {\n    return this.http.get(COTISATION_URL + \"/lastNormal/\" + idTon);\n  }\n  getActualCotisation(id) {\n    console.log(COTISATION_URL + \"/actual/\" + id);\n    return this.http.get(COTISATION_URL + \"/actual/\" + id);\n  }\n  getTontineById(id) {\n    return this.http.get(TONTINE_URL + \"/\" + id);\n  }\n  getechecBeforeCot(idCot) {\n    return this.http.get(PARTICIPATION_URL + \"/echec/cot/\" + idCot);\n  }\n  saveParticipation(data) {\n    return this.http.post(PARTICIPATION_URL + \"/save\", data);\n  }\n  saveParticipationList(data) {\n    return this.http.post(PARTICIPATION_URL + \"/saveList\", data);\n  }\n  saveCotisation(data) {\n    return this.http.post(COTISATION_URL + \"/save/\" + data.tontine.id, data);\n  }\n  checkEchecsCot(idTon, idCot) {\n    return this.http.get(PARTICIPATION_URL + \"/echec/cot/\" + idTon + \"/\" + idCot);\n  }\n  loadMembre(idTon) {\n    return this.http.get(TONTINE_URL + \"/membres/\" + idTon);\n  }\n  saveEnrg(enr) {\n    return this.http.post(TONTINE_URL + \"/save/enrg\", enr);\n  }\n  save(ton) {\n    return this.http.post(TONTINE_URL + \"/save\", ton);\n  }\n  saveTontine(ton) {\n    return this.http.post(TONTINE_URL + \"/save\", ton);\n  }\n  getRangEnrg(idTon) {\n    return this.http.get(MEMBER_URL + \"/rang/enrg/\" + idTon);\n  }\n  getben(id) {\n    return this.http.get(COTISATION_URL + \"/ben/\" + id);\n  }\n  startCotisation(idTontine, gratuit, rang) {\n    let actualDate = new Date().getTime();\n    let newCot;\n    this.getLastNormalCot(idTontine).pipe(takeUntilDestroyed(this.destroyRef), tap(data => {\n      let creatat = new Date(data.createdAt).getTime();\n      if (actualDate - creatat >= 86400000) {\n        newCot = new Cotisation(null, data.nom, data.rang + 1, 0, data.tauxEchec, 0, 0, data.tauxTontine, gratuit, data.tontine, null, new Date(), new Date(), 0);\n        if (newCot.rang == 1) {\n          newCot.nom = new Date().toLocaleString().slice(0, 10) + \" \" + newCot.nom;\n        } else {\n          newCot.nom = new Date().toLocaleString().slice(0, 10) + \" \" + newCot.nom.slice(10);\n        }\n      } else {\n        newCot = data;\n      }\n    })).subscribe();\n  }\n  static #_ = this.ɵfac = function TontineServiceService_Factory(t) {\n    return new (t || TontineServiceService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TontineServiceService,\n    factory: TontineServiceService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { TontineServiceService };","map":{"version":3,"names":["DestroyRef","inject","HttpParams","COTISATION_URL","MEMBER_URL","PARTICIPATION_URL","TONTINE_URL","Cotisation","takeUntilDestroyed","tap","TontineServiceService","constructor","http","authService","destroyRef","participentHasben","LoadTontine","get","LoadMyTontine","id","appUser","membre","params","set","post","MyTontine","getMyEchecs","getMyRetards","getTypes","getCotisation","idTontine","getParticipation","idCot","getActualParticipation","cot","getAllLastbenef","console","log","AllLastbenef","idTon","getLastCot","getLastNormalCot","getActualCotisation","getTontineById","getechecBeforeCot","saveParticipation","data","saveParticipationList","saveCotisation","tontine","checkEchecsCot","loadMembre","saveEnrg","enr","save","ton","saveTontine","getRangEnrg","getben","startCotisation","gratuit","rang","actualDate","Date","getTime","newCot","pipe","creatat","createdAt","nom","tauxEchec","tauxTontine","toLocaleString","slice","subscribe","_","i0","ɵɵinject","i1","HttpClient","i2","AuthService","_2","factory","ɵfac","providedIn"],"sources":["/home/ked/backups/Angular/DanguiUi/src/app/Services/tontine-service.service.ts"],"sourcesContent":["import {DestroyRef, inject, Injectable} from '@angular/core';\nimport {HttpClient, HttpParams} from \"@angular/common/http\";\nimport {Tontine} from \"../../Models/Abstracts/Tontine\";\nimport {COTISATION_URL, MEMBER_URL, PARTICIPATION_URL, TONTINE_URL} from \"../../Conf/Http\";\nimport {TypeTontine} from \"../../Models/Entitys/TypeTontine\";\nimport {Cotisation} from \"../../Models/Entitys/Cotisation\";\nimport {Participation} from \"../../Models/Entitys/Participation\";\nimport {Beneficiaire} from \"../../Models/Entitys/Beneficiaire\";\nimport {Enregistrement} from \"../../Models/Entitys/Enregistrement\";\nimport {Enrg} from \"../../Models/Enrg\";\nimport {TontineData} from \"../../Models/TontineData\";\nimport {AuthService} from \"./auth.service\";\nimport {takeUntilDestroyed} from \"@angular/core/rxjs-interop\";\nimport {tap} from \"rxjs\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TontineServiceService {\n\n  destroyRef = inject(DestroyRef);\n\n  constructor(private http:HttpClient, private authService:AuthService) { }\n\n  public participentHasben:boolean=false;\n\n  public LoadTontine(){\n\n    return this.http.get<Tontine[]>(TONTINE_URL+\"/\");\n  }\n\n  public LoadMyTontine(){\n    let id=-1;\n    if(this.authService.appUser)\n      id=this.authService.appUser.membre.id\n    let params = new HttpParams().set(\"id\",id);\n\n    return this.http.post<Tontine[]>(TONTINE_URL+\"/my\",params);\n  }\n  public MyTontine(id:number){\n\n    let params = new HttpParams().set(\"id\",id);\n\n    return this.http.post<Tontine[]>(TONTINE_URL+\"/my\",params);\n  }\n\n  public getMyEchecs(id:number){\n\n    return this.http.get<Participation[]>(PARTICIPATION_URL+\"/myEchecs/\"+id);\n  }\n\n  public getMyRetards(id:number){\n\n    return this.http.get<Participation[]>(PARTICIPATION_URL+\"/myRetards/\"+id);\n  }\n\n  public  getTypes(){\n\n    return this.http.get<TypeTontine[]>(TONTINE_URL+\"/types\");\n  }\n\n  public  getCotisation(idTontine:number){\n\n    return this.http.get<Cotisation[]>(COTISATION_URL+\"/tontine/\"+idTontine);\n  }\n\n  public getParticipation(idCot:number){\n\n    return this.http.get<Participation[]>(PARTICIPATION_URL+\"/\"+idCot);\n  }\n  public getActualParticipation(idCot: number, cot: Cotisation | undefined){\n\n    return this.http.post<Participation[]>(PARTICIPATION_URL+\"/actual/participation/\"+idCot,cot);\n  }\n\n  public getAllLastbenef(idCot:number){\n    console.log(\"idCot\",idCot);\n    return this.http.get<Beneficiaire[]>(COTISATION_URL+\"/beneficiaire/\"+idCot);\n  }\n\n  public AllLastbenef(idTon:number){\n    console.log(\"idTon\",idTon);\n    return this.http.get<Beneficiaire[]>(COTISATION_URL+\"/tontine/beneficiaire/\"+idTon);\n  }\n\n  public getLastCot(idTon:number){\n    return this.http.get<Cotisation>(COTISATION_URL+\"/last/\"+idTon);\n  }\n\n  public getLastNormalCot(idTon:number){\n    return this.http.get<Cotisation>(COTISATION_URL+\"/lastNormal/\"+idTon);\n  }\n\n  public getActualCotisation(id:number){\n    console.log(COTISATION_URL+\"/actual/\"+id);\n    return this.http.get<Cotisation>(COTISATION_URL+\"/actual/\"+id);\n  }\n  public getTontineById(id:number){\n    return this.http.get<Tontine>(TONTINE_URL+\"/\"+id);\n  }\n\n  public getechecBeforeCot(idCot:number){\n\n    return this.http.get<Participation[]>(PARTICIPATION_URL+\"/echec/cot/\"+idCot);\n  }\n\n  public saveParticipation(data: Participation) {\n\n    return this.http.post<Participation>(PARTICIPATION_URL+\"/save\",data);\n  }\n  public saveParticipationList(data: Participation[]) {\n\n    return this.http.post<Participation[]>(PARTICIPATION_URL+\"/saveList\",data);\n  }\n\n  public saveCotisation(data: Cotisation) {\n\n    return this.http.post<Cotisation>(COTISATION_URL+\"/save/\"+data.tontine.id,data);\n  }\n\n\n  public checkEchecsCot(idTon:number,idCot:number){\n\n    return this.http.get<number[][]>(PARTICIPATION_URL+\"/echec/cot/\"+idTon+\"/\"+idCot);\n  }\n\n  public loadMembre(idTon:number){\n\n    return this.http.get<Enregistrement[]>(TONTINE_URL+\"/membres/\"+idTon);\n  }\n\n  saveEnrg(enr: Enrg) {\n\n    return this.http.post<Enregistrement>(TONTINE_URL+\"/save/enrg\",enr);\n  }\n\n  save(ton: TontineData) {\n\n    return this.http.post<Tontine>(TONTINE_URL+\"/save\",ton);\n\n  }\n  saveTontine(ton: Tontine) {\n\n    return this.http.post<Tontine>(TONTINE_URL+\"/save\",ton);\n\n  }\n\n  getRangEnrg(idTon:number){\n\n    return this.http.get<number[][]>(MEMBER_URL+\"/rang/enrg/\"+idTon);\n  }\n\n  getben(id:number){\n\n    return this.http.get<Beneficiaire[]>(COTISATION_URL+\"/ben/\"+id);\n  }\n\n  startCotisation(idTontine:number,gratuit:number,rang:number|null){\n    let actualDate = new Date().getTime();\n    let newCot:Cotisation;\n    this.getLastNormalCot(idTontine).pipe(\n        takeUntilDestroyed(this.destroyRef),\n        tap(data =>{\n          let creatat= new Date(<Date>data.createdAt).getTime();\n          if((actualDate-creatat)>=86400000){\n             newCot = new Cotisation(null,data.nom,data.rang+1,0,data.tauxEchec,0,0,data.tauxTontine,\n                gratuit,data.tontine,null,new Date(),new Date(),0);\n            if (newCot.rang==1){\n              newCot.nom = new Date().toLocaleString().slice(0,10)+\" \"+newCot.nom;\n            }else {\n              newCot.nom = new Date().toLocaleString().slice(0,10)+\" \"+newCot.nom.slice(10);\n            }\n          }\n          else {\n            newCot = data;\n          }\n\n\n        })\n    ).subscribe();\n  }\n\n}\n"],"mappings":"AAAA,SAAQA,UAAU,EAAEC,MAAM,QAAmB,eAAe;AAC5D,SAAoBC,UAAU,QAAO,sBAAsB;AAE3D,SAAQC,cAAc,EAAEC,UAAU,EAAEC,iBAAiB,EAAEC,WAAW,QAAO,iBAAiB;AAE1F,SAAQC,UAAU,QAAO,iCAAiC;AAO1D,SAAQC,kBAAkB,QAAO,4BAA4B;AAC7D,SAAQC,GAAG,QAAO,MAAM;;;;AAGxB,MAGaC,qBAAqB;EAIhCC,YAAoBC,IAAe,EAAUC,WAAuB;IAAhD,KAAAD,IAAI,GAAJA,IAAI;IAAqB,KAAAC,WAAW,GAAXA,WAAW;IAFxD,KAAAC,UAAU,GAAGb,MAAM,CAACD,UAAU,CAAC;IAIxB,KAAAe,iBAAiB,GAAS,KAAK;EAFkC;EAIjEC,WAAWA,CAAA;IAEhB,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAYX,WAAW,GAAC,GAAG,CAAC;EAClD;EAEOY,aAAaA,CAAA;IAClB,IAAIC,EAAE,GAAC,CAAC,CAAC;IACT,IAAG,IAAI,CAACN,WAAW,CAACO,OAAO,EACzBD,EAAE,GAAC,IAAI,CAACN,WAAW,CAACO,OAAO,CAACC,MAAM,CAACF,EAAE;IACvC,IAAIG,MAAM,GAAG,IAAIpB,UAAU,EAAE,CAACqB,GAAG,CAAC,IAAI,EAACJ,EAAE,CAAC;IAE1C,OAAO,IAAI,CAACP,IAAI,CAACY,IAAI,CAAYlB,WAAW,GAAC,KAAK,EAACgB,MAAM,CAAC;EAC5D;EACOG,SAASA,CAACN,EAAS;IAExB,IAAIG,MAAM,GAAG,IAAIpB,UAAU,EAAE,CAACqB,GAAG,CAAC,IAAI,EAACJ,EAAE,CAAC;IAE1C,OAAO,IAAI,CAACP,IAAI,CAACY,IAAI,CAAYlB,WAAW,GAAC,KAAK,EAACgB,MAAM,CAAC;EAC5D;EAEOI,WAAWA,CAACP,EAAS;IAE1B,OAAO,IAAI,CAACP,IAAI,CAACK,GAAG,CAAkBZ,iBAAiB,GAAC,YAAY,GAACc,EAAE,CAAC;EAC1E;EAEOQ,YAAYA,CAACR,EAAS;IAE3B,OAAO,IAAI,CAACP,IAAI,CAACK,GAAG,CAAkBZ,iBAAiB,GAAC,aAAa,GAACc,EAAE,CAAC;EAC3E;EAEQS,QAAQA,CAAA;IAEd,OAAO,IAAI,CAAChB,IAAI,CAACK,GAAG,CAAgBX,WAAW,GAAC,QAAQ,CAAC;EAC3D;EAEQuB,aAAaA,CAACC,SAAgB;IAEpC,OAAO,IAAI,CAAClB,IAAI,CAACK,GAAG,CAAed,cAAc,GAAC,WAAW,GAAC2B,SAAS,CAAC;EAC1E;EAEOC,gBAAgBA,CAACC,KAAY;IAElC,OAAO,IAAI,CAACpB,IAAI,CAACK,GAAG,CAAkBZ,iBAAiB,GAAC,GAAG,GAAC2B,KAAK,CAAC;EACpE;EACOC,sBAAsBA,CAACD,KAAa,EAAEE,GAA2B;IAEtE,OAAO,IAAI,CAACtB,IAAI,CAACY,IAAI,CAAkBnB,iBAAiB,GAAC,wBAAwB,GAAC2B,KAAK,EAACE,GAAG,CAAC;EAC9F;EAEOC,eAAeA,CAACH,KAAY;IACjCI,OAAO,CAACC,GAAG,CAAC,OAAO,EAACL,KAAK,CAAC;IAC1B,OAAO,IAAI,CAACpB,IAAI,CAACK,GAAG,CAAiBd,cAAc,GAAC,gBAAgB,GAAC6B,KAAK,CAAC;EAC7E;EAEOM,YAAYA,CAACC,KAAY;IAC9BH,OAAO,CAACC,GAAG,CAAC,OAAO,EAACE,KAAK,CAAC;IAC1B,OAAO,IAAI,CAAC3B,IAAI,CAACK,GAAG,CAAiBd,cAAc,GAAC,wBAAwB,GAACoC,KAAK,CAAC;EACrF;EAEOC,UAAUA,CAACD,KAAY;IAC5B,OAAO,IAAI,CAAC3B,IAAI,CAACK,GAAG,CAAad,cAAc,GAAC,QAAQ,GAACoC,KAAK,CAAC;EACjE;EAEOE,gBAAgBA,CAACF,KAAY;IAClC,OAAO,IAAI,CAAC3B,IAAI,CAACK,GAAG,CAAad,cAAc,GAAC,cAAc,GAACoC,KAAK,CAAC;EACvE;EAEOG,mBAAmBA,CAACvB,EAAS;IAClCiB,OAAO,CAACC,GAAG,CAAClC,cAAc,GAAC,UAAU,GAACgB,EAAE,CAAC;IACzC,OAAO,IAAI,CAACP,IAAI,CAACK,GAAG,CAAad,cAAc,GAAC,UAAU,GAACgB,EAAE,CAAC;EAChE;EACOwB,cAAcA,CAACxB,EAAS;IAC7B,OAAO,IAAI,CAACP,IAAI,CAACK,GAAG,CAAUX,WAAW,GAAC,GAAG,GAACa,EAAE,CAAC;EACnD;EAEOyB,iBAAiBA,CAACZ,KAAY;IAEnC,OAAO,IAAI,CAACpB,IAAI,CAACK,GAAG,CAAkBZ,iBAAiB,GAAC,aAAa,GAAC2B,KAAK,CAAC;EAC9E;EAEOa,iBAAiBA,CAACC,IAAmB;IAE1C,OAAO,IAAI,CAAClC,IAAI,CAACY,IAAI,CAAgBnB,iBAAiB,GAAC,OAAO,EAACyC,IAAI,CAAC;EACtE;EACOC,qBAAqBA,CAACD,IAAqB;IAEhD,OAAO,IAAI,CAAClC,IAAI,CAACY,IAAI,CAAkBnB,iBAAiB,GAAC,WAAW,EAACyC,IAAI,CAAC;EAC5E;EAEOE,cAAcA,CAACF,IAAgB;IAEpC,OAAO,IAAI,CAAClC,IAAI,CAACY,IAAI,CAAarB,cAAc,GAAC,QAAQ,GAAC2C,IAAI,CAACG,OAAO,CAAC9B,EAAE,EAAC2B,IAAI,CAAC;EACjF;EAGOI,cAAcA,CAACX,KAAY,EAACP,KAAY;IAE7C,OAAO,IAAI,CAACpB,IAAI,CAACK,GAAG,CAAaZ,iBAAiB,GAAC,aAAa,GAACkC,KAAK,GAAC,GAAG,GAACP,KAAK,CAAC;EACnF;EAEOmB,UAAUA,CAACZ,KAAY;IAE5B,OAAO,IAAI,CAAC3B,IAAI,CAACK,GAAG,CAAmBX,WAAW,GAAC,WAAW,GAACiC,KAAK,CAAC;EACvE;EAEAa,QAAQA,CAACC,GAAS;IAEhB,OAAO,IAAI,CAACzC,IAAI,CAACY,IAAI,CAAiBlB,WAAW,GAAC,YAAY,EAAC+C,GAAG,CAAC;EACrE;EAEAC,IAAIA,CAACC,GAAgB;IAEnB,OAAO,IAAI,CAAC3C,IAAI,CAACY,IAAI,CAAUlB,WAAW,GAAC,OAAO,EAACiD,GAAG,CAAC;EAEzD;EACAC,WAAWA,CAACD,GAAY;IAEtB,OAAO,IAAI,CAAC3C,IAAI,CAACY,IAAI,CAAUlB,WAAW,GAAC,OAAO,EAACiD,GAAG,CAAC;EAEzD;EAEAE,WAAWA,CAAClB,KAAY;IAEtB,OAAO,IAAI,CAAC3B,IAAI,CAACK,GAAG,CAAab,UAAU,GAAC,aAAa,GAACmC,KAAK,CAAC;EAClE;EAEAmB,MAAMA,CAACvC,EAAS;IAEd,OAAO,IAAI,CAACP,IAAI,CAACK,GAAG,CAAiBd,cAAc,GAAC,OAAO,GAACgB,EAAE,CAAC;EACjE;EAEAwC,eAAeA,CAAC7B,SAAgB,EAAC8B,OAAc,EAACC,IAAgB;IAC9D,IAAIC,UAAU,GAAG,IAAIC,IAAI,EAAE,CAACC,OAAO,EAAE;IACrC,IAAIC,MAAiB;IACrB,IAAI,CAACxB,gBAAgB,CAACX,SAAS,CAAC,CAACoC,IAAI,CACjC1D,kBAAkB,CAAC,IAAI,CAACM,UAAU,CAAC,EACnCL,GAAG,CAACqC,IAAI,IAAG;MACT,IAAIqB,OAAO,GAAE,IAAIJ,IAAI,CAAOjB,IAAI,CAACsB,SAAS,CAAC,CAACJ,OAAO,EAAE;MACrD,IAAIF,UAAU,GAACK,OAAO,IAAG,QAAQ,EAAC;QAC/BF,MAAM,GAAG,IAAI1D,UAAU,CAAC,IAAI,EAACuC,IAAI,CAACuB,GAAG,EAACvB,IAAI,CAACe,IAAI,GAAC,CAAC,EAAC,CAAC,EAACf,IAAI,CAACwB,SAAS,EAAC,CAAC,EAAC,CAAC,EAACxB,IAAI,CAACyB,WAAW,EACpFX,OAAO,EAACd,IAAI,CAACG,OAAO,EAAC,IAAI,EAAC,IAAIc,IAAI,EAAE,EAAC,IAAIA,IAAI,EAAE,EAAC,CAAC,CAAC;QACtD,IAAIE,MAAM,CAACJ,IAAI,IAAE,CAAC,EAAC;UACjBI,MAAM,CAACI,GAAG,GAAG,IAAIN,IAAI,EAAE,CAACS,cAAc,EAAE,CAACC,KAAK,CAAC,CAAC,EAAC,EAAE,CAAC,GAAC,GAAG,GAACR,MAAM,CAACI,GAAG;SACpE,MAAK;UACJJ,MAAM,CAACI,GAAG,GAAG,IAAIN,IAAI,EAAE,CAACS,cAAc,EAAE,CAACC,KAAK,CAAC,CAAC,EAAC,EAAE,CAAC,GAAC,GAAG,GAACR,MAAM,CAACI,GAAG,CAACI,KAAK,CAAC,EAAE,CAAC;;OAEhF,MACI;QACHR,MAAM,GAAGnB,IAAI;;IAIjB,CAAC,CAAC,CACL,CAAC4B,SAAS,EAAE;EACf;EAAC,QAAAC,CAAA,G;qBAlKUjE,qBAAqB,EAAAkE,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;WAArBxE,qBAAqB;IAAAyE,OAAA,EAArBzE,qBAAqB,CAAA0E,IAAA;IAAAC,UAAA,EAFpB;EAAM;;SAEP3E,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}