{"ast":null,"code":"import { inject } from '@angular/core';\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/material/button\";\nimport * as i3 from \"@angular/material/menu\";\nimport * as i4 from \"@angular/material/icon\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/grid-list\";\nimport * as i8 from \"@angular/material/card\";\nfunction DashboardComponent_mat_grid_tile_4_mat_form_field_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-form-field\", 12)(1, \"mat-label\");\n    i0.ɵɵtext(2, \" rechercher \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 13);\n    i0.ɵɵelementStart(4, \"button\", 14)(5, \"mat-icon\");\n    i0.ɵɵtext(6, \"search\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction DashboardComponent_mat_grid_tile_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-grid-tile\", 4)(1, \"mat-card\", 5)(2, \"mat-card-header\")(3, \"mat-card-title\")(4, \"span\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, DashboardComponent_mat_grid_tile_4_mat_form_field_6_Template, 7, 0, \"mat-form-field\", 6);\n    i0.ɵɵelementStart(7, \"button\", 7)(8, \"mat-icon\");\n    i0.ɵɵtext(9, \"more_vert\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"mat-menu\", 8, 9)(12, \"button\", 10);\n    i0.ɵɵtext(13, \"Expand\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"button\", 10);\n    i0.ɵɵtext(15, \"Remove\");\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(16, \"mat-card-content\", 11)(17, \"div\");\n    i0.ɵɵtext(18, \"Card Content Here\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const card_r1 = ctx.$implicit;\n    const _r3 = i0.ɵɵreference(11);\n    i0.ɵɵproperty(\"colspan\", card_r1.cols)(\"rowspan\", card_r1.rows);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", card_r1.title, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", card_r1.searchable);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"matMenuTriggerFor\", _r3);\n  }\n}\nlet DashboardComponent = /*#__PURE__*/(() => {\n  class DashboardComponent {\n    constructor() {\n      this.breakpointObserver = inject(BreakpointObserver);\n      /** Based on the screen size, switch from standard to one column per row */\n      this.cards = this.breakpointObserver.observe(Breakpoints.Handset).pipe(map(({\n        matches\n      }) => {\n        if (matches) {\n          return [{\n            title: 'Options',\n            cols: 1,\n            rows: 1,\n            searchable: false\n          }, {\n            title: 'Tontines',\n            cols: 1,\n            rows: 1,\n            searchable: true\n          }, {\n            title: 'Membres',\n            cols: 1,\n            rows: 1,\n            searchable: true\n          }, {\n            title: 'Caisses',\n            cols: 1,\n            rows: 1,\n            searchable: true\n          }];\n        }\n        return [{\n          title: 'Options',\n          cols: 2,\n          rows: 1,\n          searchable: false\n        }, {\n          title: 'Tontines',\n          cols: 1,\n          rows: 1,\n          searchable: true\n        }, {\n          title: 'Membres',\n          cols: 1,\n          rows: 2,\n          searchable: true\n        }, {\n          title: 'Caisses',\n          cols: 1,\n          rows: 1,\n          searchable: true\n        }];\n      }));\n    }\n    static #_ = this.ɵfac = function DashboardComponent_Factory(t) {\n      return new (t || DashboardComponent)();\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: DashboardComponent,\n      selectors: [[\"app-dashboard\"]],\n      decls: 6,\n      vars: 3,\n      consts: [[1, \"grid-container\"], [1, \"mat-h1\"], [\"cols\", \"2\", \"rowHeight\", \"350px\"], [3, \"colspan\", \"rowspan\", 4, \"ngFor\", \"ngForOf\"], [3, \"colspan\", \"rowspan\"], [1, \"dashboard-card\"], [\"appearance\", \"outline\", \"class\", \"example-form-field\", 4, \"ngIf\"], [\"mat-icon-button\", \"\", \"aria-label\", \"Toggle menu\", 1, \"more-button\", 3, \"matMenuTriggerFor\"], [\"xPosition\", \"before\"], [\"menu\", \"matMenu\"], [\"mat-menu-item\", \"\"], [1, \"dashboard-card-content\"], [\"appearance\", \"outline\", 1, \"example-form-field\"], [\"matInput\", \"\", \"type\", \"text\"], [\"matSuffix\", \"\", \"mat-icon-button\", \"\", \"aria-label\", \"Clear\"]],\n      template: function DashboardComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\", 1);\n          i0.ɵɵtext(2, \"Dashboard\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"mat-grid-list\", 2);\n          i0.ɵɵtemplate(4, DashboardComponent_mat_grid_tile_4_Template, 19, 5, \"mat-grid-tile\", 3);\n          i0.ɵɵpipe(5, \"async\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(5, 1, ctx.cards));\n        }\n      },\n      dependencies: [i1.NgForOf, i1.NgIf, i2.MatIconButton, i3.MatMenu, i3.MatMenuItem, i3.MatMenuTrigger, i4.MatIcon, i5.MatInput, i6.MatFormField, i6.MatLabel, i6.MatSuffix, i7.MatGridList, i7.MatGridTile, i8.MatCard, i8.MatCardContent, i8.MatCardHeader, i8.MatCardTitle, i1.AsyncPipe],\n      styles: [\".grid-container[_ngcontent-%COMP%]{margin:20px}.dashboard-card[_ngcontent-%COMP%]{position:absolute;inset:15px}.more-button[_ngcontent-%COMP%]{position:absolute;top:5px;right:10px}.dashboard-card-content[_ngcontent-%COMP%]{text-align:center}.search--wapper[_ngcontent-%COMP%]{width:100%;display:flex;gap:10%}.mat-mdc-card-header[_ngcontent-%COMP%]{display:flex;padding:16px 16px 0;justify-content:space-between}\"]\n    });\n  }\n  return DashboardComponent;\n})();\nexport { DashboardComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}