{"ast":null,"code":"export function getDetteMontant(pret, versements) {\n  let montant = Number(pret.montant);\n  let lastVersementDate = versements.length > 0 ? versements[0].dateVersement : null;\n  let sommeVerser = 0;\n  let delay = 0;\n  //date du dernier versement et somme total deja verser\n  for (let verse of versements) {\n    if (verse.dateVersement) if (!lastVersementDate) {\n      lastVersementDate = new Date(verse.dateVersement.toString());\n    } else if (new Date(lastVersementDate.toString()).getTime() < new Date(verse.dateVersement.toString()).getTime()) {\n      lastVersementDate = new Date(verse.dateVersement.toString());\n    }\n    sommeVerser += Number(verse.montant);\n  }\n  //le delay ecouler depuis l'optention du pret\n  if (pret.datePret) {\n    delay = new Date().getTime() - new Date(pret.datePret.toString()).getTime();\n  }\n  let accorded = Number(pret.epargnant?.epargne?.delaisRemboursement);\n  let tauxInteret = Number(pret.epargnant?.epargne?.tauxInteretPret) / 100;\n  let verseDelay = 0;\n  if (lastVersementDate && pret.datePret) verseDelay = new Date(lastVersementDate.toString()).getTime() - new Date(pret.datePret.toString()).getTime();\n  montant += Number(pret.montant) * tauxInteret;\n  while (delay - accorded > 2592000000) {\n    if (verseDelay > 0) {\n      if (delay <= verseDelay && sommeVerser >= montant) {\n        break;\n      }\n    }\n    montant += montant * tauxInteret;\n    delay -= 2592000000;\n  }\n  return Math.round(montant + 1);\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}