{"ast":null,"code":"import * as i0 from \"@angular/core\";\nlet CacheResolverService = /*#__PURE__*/(() => {\n  class CacheResolverService {\n    constructor() {\n      this.cache = new Map();\n      this.lats = \"\";\n    }\n    set(key, value, timeToLive = null) {\n      console.log(\"Set cache key \", key);\n      if (timeToLive) {\n        const expiresIn = new Date();\n        expiresIn.setSeconds(expiresIn.getSeconds() + timeToLive);\n        this.cache.set(key, [expiresIn, value]);\n      } else {\n        this.cache.set(key, [new Date(), value]);\n      }\n    }\n    get(key) {\n      console.log(\"Get cache key \", key);\n      const tuple = this.cache.get(key);\n      if (!tuple) return null;\n      const expiresIn = tuple[0];\n      const httpSavedResponse = tuple[1];\n      const now = new Date();\n      if (expiresIn && expiresIn.getTime() < now.getTime()) {\n        this.cache.delete(key);\n        return null;\n      }\n      return httpSavedResponse;\n    }\n    map(route) {\n      if (route.endsWith(\"/Tontine/types\")) return 6400;\n      // if(route.endsWith(\"/membre/user\"))\n      //   return 360;\n      if (route.includes(\"participation/\")) return 60;\n      return 0;\n    }\n    static #_ = this.ɵfac = function CacheResolverService_Factory(t) {\n      return new (t || CacheResolverService)();\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: CacheResolverService,\n      factory: CacheResolverService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return CacheResolverService;\n})();\nexport { CacheResolverService };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}